\babel@toc {dutch}{}\relax 
\babel@toc {dutch}{}\relax 
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces CNN met 2 convolutie lagen en 2 pooling lagen en een fully-connected layer\relax }}{4}{figure.caption.10}%
\contentsline {figure}{\numberline {2.2}{\ignorespaces Convolutie laag waarbij een filter wordt herleid tot een output feature.\relax }}{4}{figure.caption.11}%
\contentsline {figure}{\numberline {2.3}{\ignorespaces ReLu, waarbij het maximum wordt genomen van 0 en de input waarde.\relax }}{5}{figure.caption.12}%
\contentsline {figure}{\numberline {2.4}{\ignorespaces R-CNN\relax }}{6}{figure.caption.13}%
\contentsline {figure}{\numberline {2.5}{\ignorespaces Faster R-CNN\relax }}{7}{figure.caption.14}%
\contentsline {figure}{\numberline {2.6}{\ignorespaces YOLO waarbij de input is opgedeeld in een S x S rooster. En waarbij bounding box voorspellingen zijn gedaan.\relax }}{8}{figure.caption.15}%
\contentsline {figure}{\numberline {2.7}{\ignorespaces One-stage detector met VGG net backbone\relax }}{8}{figure.caption.16}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Implementatie flow van een getraind TensorFlow model naar de applicatie\relax }}{11}{figure.caption.17}%
\contentsline {figure}{\numberline {3.2}{\ignorespaces Implementatie flow van een getraind PyTorch model naar de applicatie met code\relax }}{12}{figure.caption.18}%
\contentsline {figure}{\numberline {3.3}{\ignorespaces CNN voor en na pruning\relax }}{15}{figure.caption.19}%
\addvspace {10\p@ }
